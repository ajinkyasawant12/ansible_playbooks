---
- name: Upgrade MongoDB from 4.0 to 7.0
  hosts: mongodb_servers
  become: true
  vars:
    mongodb_version: "4.0" # Current MongoDB version
    target_mongodb_version: "7.0" # Target MongoDB version
    test_db: "test_db"
    test_collection: "test_collection"
    test_data: '{"name": "test", "value": 1}'
    upgrade_versions:
      - "4.2"
      - "4.4"
      - "5.0"
      - "7.0"

  tasks:
    - name: Stop MongoDB service
      service:
        name: mongod
        state: stopped

    - name: Backup MongoDB data
      command: mongodump --out /path/to/backup/directory
      args:
        warn: false
      register: backup_output
      changed_when: backup_output.rc == 0

    - name: exit from playbook if backup failed
      meta: end_play
      when: backup_output.rc != 0

    - name: Start MongoDB service
      service:
        name: mongod
        state: started

    - name: Insert test data into MongoDB
      command: mongo {{ test_db }} --eval 'db.{{ test_collection }}.insert({{ test_data }})'
      register: insert_test_data_output

    - name: Verify test data insertion
      command: mongo {{ test_db }} --eval 'db.{{ test_collection }}.find({{ test_data }}).count()'
      register: verify_test_data_insertion
      changed_when: verify_test_data_insertion.stdout == "1"

    - name: Upgrade MongoDB
      include_tasks: upgrade_mongodb.yml
      loop: "{{ upgrade_versions }}"
      loop_control:
        loop_var: upgrade_version

    - name: Verify MongoDB version after upgrading to {{ target_mongodb_version }}
      command: mongo --eval "db.version()"
      register: mongo_version_output_final

    - name: Check MongoDB version after upgrade to {{ target_mongodb_version }}
      debug:
        msg: "MongoDB version is {{ mongo_version_output_final.stdout }}"

    - name: Verify test data after final upgrade
      command: mongo {{ test_db }} --eval 'db.{{ test_collection }}.find({{ test_data }}).count()'
      register: verify_test_data_after_final
      changed_when: verify_test_data_after_final.stdout == "1"

  handlers:
    - name: Restart MongoDB service
      service:
        name: mongod
        state: restarted